package ru.mail.polis.homework.io;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.*;

public class CopyFile {

    /**
     * –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –∏–∑ pathFrom –≤ pathTo. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–¥–æ –≤—Å–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–æ—Å—Ç–∏
     * –§–∞–π–ª—ã –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä—É—á–∫–∞–º–∏ —á–µ—Ä–µ–∑ —Å—Ç—Ä–∏–º—ã. –?—Å–ø–æ–ª–∑—É–µ–º –Ω–æ–≤—ã–π API
     * –í —Ç–µ—Å—Ç–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω–∞–¥–æ —Ä–∞—Å—Å–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –≤ setUp()
     * 3 –±–∞–ª–ª–∞
     */
    public static String copyFiles(String pathFrom, String pathTo){
        if((pathFrom == null) || (pathTo == null) || (Files.notExists(Paths.get(pathFrom)))){
            return null;
        }
        Path to = Paths.get(pathTo);
        Path from = Paths.get(pathFrom);
        try{
            if(Files.notExists(to.getParent())){ Files.createDirectories(to.getParent());}
            if(Files.isRegularFile(from)){ copyFile(from, to); return null;}

            Files.createDirectory(to);
            DirectoryStream<Path> dstream = Files.newDirectoryStream(from);
            dstream.forEach(path -> copyFiles(path.toString(), to.resolve(path.getFileName()).toString()));
        }catch (IOException e){
            e.printStackTrace();
        }
        return null;
    }

    private static void copyFile(Path from, Path to) throws IOException{
        try(
                InputStream in   = Files.newInputStream(from);
                OutputStream out = Files.newOutputStream(to)){
            byte[] buffer = new byte[1024];
            int buff2;
            while ((buff2 = in.read(buffer)) > 0) {
                out.write(buffer, 0, buff2);
                out.flush();
            }
        }
    }
}
